{"version":3,"sources":["api/unsplash.js","components/Searchbar.js","components/ImageCard.js","components/ImageList.js","components/App.js","index.js"],"names":["axios","create","baseURL","headers","Authorization","Searchbar","state","term","onFormSubmit","event","preventDefault","props","on","className","onSubmit","this","type","value","onChange","e","setState","target","class","onClick","onSearchSubmit","React","Component","ImageCard","span","SetSpans","height","imageRef","current","clientHeight","console","log","Math","ceil","createRef","addEventListener","image","description","urls","style","gridRowEnd","alt","src","regular","ref","ImageList","images","map","key","id","App","apiData","bind","get","then","resp","unsplash","params","query","response","data","results","marginTop","ReactDom","render","document","querySelector"],"mappings":"oRAEeA,MAAMC,OAAO,CAC5BC,QAAQ,4BAERC,QAAQ,CACJC,cAAe,gFCkDJC,E,2MA9CXC,MAAQ,CAAEC,KAAM,I,EAehBC,aAAe,SAACC,GAET,EAAKH,MAAMC,KAGdE,EAAMC,iBACN,EAAKC,MAAMC,GAAG,EAAKN,MAAMC,O,wEAKnB,IAAD,OACL,OAAQ,yBAAKM,UAAU,cACnB,0BAAMA,UAAU,UAAUC,SAAUC,KAAKP,cACrC,yBAAKK,UAAU,SACX,+CACA,2BAAOG,KAAK,OACRC,MAAOF,KAAKT,MAAMC,KAClBW,SAAU,SAACC,GAAD,OAAO,EAAKC,SAAS,CAAEb,KAAMY,EAAEE,OAAOJ,YAGxD,4BAAQD,KAAK,SAASM,MAAM,0CAA0CC,QAASR,KAAKS,gBAChF,uBAAGF,MAAM,qBADb,Y,GA5CQG,IAAMC,WCwCfC,G,kBAtCX,WAAYhB,GACX,IAAD,8BACI,4CAAMA,KAIVL,MAAQ,CAACsB,KAAK,GALd,EAeAC,SAAS,WAEL,IAAMC,EAAS,EAAKC,SAASC,QAAQC,aACrCC,QAAQC,IAAIL,GACZ,IAAMF,EAAQQ,KAAKC,KAAKP,EAAO,IAC/B,EAAKV,SAAS,CAACQ,UAlBf,EAAKG,SAAWN,IAAMa,YAF1B,E,iFAYIvB,KAAKgB,SAASC,QAAQO,iBAAiB,OAAOxB,KAAKc,Y,+BAWtD,IAAD,EACgCd,KAAKJ,MAAM6B,MAAhCC,EADX,EACWA,YAAaC,EADxB,EACwBA,KACpB,OACI,yBAAKC,MAAO,CAACC,WAAW,QAAD,OAAS7B,KAAKT,MAAMsB,QACvC,yBAAKiB,IAAKJ,EAAaK,IAAKJ,EAAKK,QAASC,IAAKjC,KAAKgB,gB,GA9B5CN,IAAMC,YCYfuB,EAXG,SAACtC,GAEf,IAAMuC,EAAUvC,EAAMuC,OAAOC,KAAI,SAACX,GAC9B,OAAQ,kBAAC,EAAD,CAAWA,MAAOA,EAAQY,IAAKZ,EAAMa,QAGrD,OACA,yBAAKxC,UAAU,cAAeqC,ICyCfI,E,YA5Cb,WAAY3C,GACX,IAAD,8BACE,4CAAMA,KAGR4C,QAAU,GAJV,EAeAjD,MAAQ,CAAC4C,OAAO,IAbd,EAAK1B,eAAiB,EAAKA,eAAegC,KAApB,gBAFxB,E,8EAOAxD,IAAMyD,IAAI,6BAA6BC,MAAK,SAAAC,GAE1CzB,QAAQC,IAAIwB,Q,8EAOOpD,G,8EAEvB2B,QAAQC,IAAI5B,G,SACYqD,EAASH,IAAI,gBACrC,CACEI,OAAQ,CACLC,MAAOvD,K,OAHNwD,E,OASHhD,KAAKK,SAAS,CAAC8B,OAAQa,EAASC,KAAKC,U,sIAKpC,OAAQ,yBAAKpD,UAAU,eAAe8B,MAAO,CAACuB,UAAU,SACxD,kBAAC,EAAD,CAAWtD,GAAIG,KAAKS,iBACpB,kBAAC,EAAD,CAAW0B,OAAQnC,KAAKT,MAAM4C,c,GAtChBzB,IAAMC,WCDxByC,IAASC,OAAO,kBAAC,EAAD,MAAYC,SAASC,cAAc,Y","file":"static/js/main.229b15f2.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport default axios.create({\r\nbaseURL:'https://api.unsplash.com/',\r\n \r\nheaders:{\r\n    Authorization: 'Client-ID 467f2f0f98e7bab9a259c85adbf016e470ee90ad413a7474c9932541f0a0d540'\r\n  }\r\n})","import React from 'react';\r\n\r\nclass Searchbar extends React.Component {\r\n    // First way to solve the error may occured in line 23\r\n    // constructor(){\r\n    //     super();\r\n    //     this.onFormSubmit = this.onFormSubmit.bind(this);\r\n    // }\r\n\r\n\r\n    state = { term: '' }\r\n\r\n    // onInputChange=(event)=>\r\n    // {\r\n    //     this.setState( {term:event.target.value })\r\n    // }\r\n\r\n    // onFormSubmit(event)\r\n    // {\r\n\r\n    //     event.preventDefault();\r\n    //     console.log(this.state.term); // It will produce an error\r\n    // }\r\n    // Second way to solve the error occured in line 23 is to convert the function as arrow function\r\n    // Arrow function automatically binds this \r\n    onFormSubmit = (event) => {\r\n        debugger;\r\n        if(this.state.term == ''){\r\n\r\n        }\r\n        event.preventDefault();\r\n        this.props.on(this.state.term); // here the call back function got bind with the state value and passed to\r\n        // parent component\r\n        //console.log(this.state.term); \r\n    }\r\n\r\n    render() {\r\n        return (<div className='ui segment'>\r\n            <form className='ui form' onSubmit={this.onFormSubmit}>\r\n                <div className='field'>\r\n                    <label>Search Image</label>\r\n                    <input type='text'\r\n                        value={this.state.term}\r\n                        onChange={(e) => this.setState({ term: e.target.value })}></input>\r\n\r\n                </div>\r\n                <button type='submit' class=\"ui right labeled icon blue basic button\" onClick={this.onSearchSubmit}>\r\n                    <i class=\"right arrow icon\"></i>\r\n                Go\r\n                </button>\r\n            </form>\r\n\r\n        </div>);\r\n    }\r\n}\r\n\r\nexport default Searchbar;","import React from 'react';\r\n\r\nclass ImageCard extends React.Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.imageRef = React.createRef();\r\n\r\n    }\r\n    state = {span:0}\r\n    componentDidMount()\r\n    {\r\n        //console.log(this.imageRef);\r\n        //console.log(this.imageRef.current.clientHeight);// to access the property of image tag\r\n        \r\n        // Another way to do this\r\n        this.imageRef.current.addEventListener('load',this.SetSpans);\r\n    }\r\n\r\n    SetSpans=()=>\r\n    {\r\n        const height = this.imageRef.current.clientHeight;\r\n        console.log(height);\r\n        const span =  Math.ceil(height/20);\r\n        this.setState({span})\r\n    }\r\n    render()\r\n    {\r\n        const {description, urls} = this.props.image;\r\n        return(\r\n            <div style={{gridRowEnd:`span ${this.state.span}`}} >\r\n                <img alt={description} src={urls.regular} ref={this.imageRef}></img>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default ImageCard;","import './ImageList.css'\r\nimport React from 'react';\r\nimport ImageCard from './ImageCard';\r\nconst ImageList = (props) =>\r\n{\r\n    const images =  props.images.map((image)=>{\r\n        return  <ImageCard image={image}  key={image.id}></ImageCard>\r\n    })    \r\n\r\nreturn (\r\n<div className=\"first-grid\" >{images}</div>)\r\n\r\n}\r\n\r\nexport default ImageList;","import React from 'react';\r\nimport unsplash from '../api/unsplash';\r\nimport Searchbar from './Searchbar'\r\nimport ImageList from './ImageList';\r\nimport axios from 'axios';\r\nclass App extends React.Component\r\n{\r\n  constructor(props)\r\n  {\r\n    super(props);\r\n    this.onSearchSubmit = this.onSearchSubmit.bind(this);\r\n  }\r\n  apiData = {};\r\n  makeAPiRequest()\r\n {\r\n  axios.get('http://localhost:3001/api').then(resp => {\r\n\r\n    console.log(resp);\r\n    \r\n});\r\n }\r\n\r\n\r\n  state = {images:[]};\r\n  async onSearchSubmit(term) \r\n  {\r\nconsole.log(term);\r\nconst response =  await unsplash.get('search/photos' ,\r\n{\r\n  params: {\r\n     query: term\r\n  },\r\n  \r\n \r\n});\r\n \r\n   this.setState({images: response.data.results});\r\n  }\r\n  \r\n    render()\r\n  {\r\n    return (<div className='ui container' style={{marginTop:'10px'}}>\r\n    <Searchbar on={this.onSearchSubmit}></Searchbar>\r\n    <ImageList images={this.state.images} />\r\n    {/* <button onClick={this.onSearchSubmit} >makeAPiRequest</button> */}\r\n    </div>); // onSubmit is prop passed to searchBar component \r\n    // this.onSearchSubmit is a reference to a call back function defined in SerachBar component\r\n  }\r\n    \r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDom from 'react-dom';\r\nimport  App  from \"./components/App\";\r\n\r\nReactDom.render(<App></App>,document.querySelector('#root'));"],"sourceRoot":""}